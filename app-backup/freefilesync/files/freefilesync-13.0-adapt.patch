diff '--color=auto' -ruN a/FreeFileSync/Source/base/icon_loader.cpp b/FreeFileSync/Source/base/icon_loader.cpp
--- a/FreeFileSync/Source/base/icon_loader.cpp	2023-09-13 12:16:12.000000000 +0200
+++ b/FreeFileSync/Source/base/icon_loader.cpp	2025-05-10 23:34:57.993898976 +0200
@@ -227,6 +227,7 @@
     //the remaining icon types won't block!
     assert(GDK_IS_PIXBUF(gicon) || G_IS_THEMED_ICON(gicon) || G_IS_EMBLEMED_ICON(gicon));
 
+    #undef g_object_ref
     ::g_object_ref(gicon);                 //pass ownership
     return FileIconHolder(gicon, maxSize); //
 
diff '--color=auto' -ruN a/FreeFileSync/Source/ffs_paths.cpp b/FreeFileSync/Source/ffs_paths.cpp
--- a/FreeFileSync/Source/ffs_paths.cpp	2023-09-13 12:16:12.000000000 +0200
+++ b/FreeFileSync/Source/ffs_paths.cpp	2025-05-10 23:34:58.093898973 +0200
@@ -55,7 +55,7 @@
 
 Zstring fff::getResourceDirPath()
 {
-    return appendPath(getProcessParentFolderPath(), Zstr("Resources"));
+    return appendPath(getProcessParentFolderPath(), Zstr("share/FreeFileSync/Resources"));
 }
 
 
diff '--color=auto' -ruN a/FreeFileSync/Source/Makefile b/FreeFileSync/Source/Makefile
--- a/FreeFileSync/Source/Makefile	2023-09-13 12:16:10.000000000 +0200
+++ b/FreeFileSync/Source/Makefile	2025-05-10 23:34:58.183898969 +0200
@@ -1,11 +1,19 @@
 CXX ?= g++
-exeName = FreeFileSync_$(shell arch)
+# We are building for a single target arch
+EXENAME = FreeFileSync
+prefix      = /usr
+BINDIR      = $(DESTDIR)$(prefix)/bin
+SHAREDIR    = $(DESTDIR)$(prefix)/share
+APPSHAREDIR = $(SHAREDIR)/$(EXENAME)
+DOCSHAREDIR = $(SHAREDIR)/doc/$(EXENAME)
 
+# Add SFTP parameters, remove -O3 to respect system CXXFLAGS
 CXXFLAGS += -std=c++23 -pipe -DWXINTL_NO_GETTEXT_MACRO -I../.. -I../../zenXml -include "zen/i18n.h" -include "zen/warn_static.h" \
            -Wall -Wfatal-errors -Wmissing-include-dirs -Wswitch-enum -Wcast-align -Wnon-virtual-dtor -Wno-unused-function -Wshadow -Wno-maybe-uninitialized \
-           -O3 -DNDEBUG `wx-config --cxxflags --debug=no` -pthread
+           -DNDEBUG `wx-config --cxxflags --debug=no` -pthread -DMAX_SFTP_OUTGOING_SIZE=30000 -DMAX_SFTP_READ_SIZE=30000
 
-LDFLAGS += -s -no-pie `wx-config --libs std, aui, richtext --debug=no` -pthread
+# Remove -s because stripping is done by emerge, add -lz
+LDFLAGS += -no-pie -lz `wx-config --libs std, aui, richtext --debug=no` -pthread
 
 
 CXXFLAGS  += `pkg-config --cflags openssl`
@@ -17,9 +25,10 @@
 CXXFLAGS  += `pkg-config --cflags libssh2`
 LDFLAGS += `pkg-config --libs   libssh2`
 
-CXXFLAGS  += `pkg-config --cflags gtk+-2.0`
+CXXFLAGS  += `pkg-config --cflags gtk+-3.0`
+LDFLAGS += `pkg-config --libs gtk+-3.0`
 #treat as system headers so that warnings are hidden:
-CXXFLAGS  += -isystem/usr/include/gtk-2.0
+CXXFLAGS  += -isystem/usr/include/gtk-3.0
 
 #support for SELinux (optional)
 SELINUX_EXISTING=$(shell pkg-config --exists libselinux && echo YES)
@@ -112,13 +121,14 @@
 cppFiles+=../../wx+/popup_dlg_generated.cpp
 cppFiles+=../../xBRZ/src/xbrz.cpp
 
-tmpPath = $(shell dirname "$(shell mktemp -u)")/$(exeName)_Make
+# Temp files in build tree instead of system /tmp
+tmpPath = ../Build/tmp/$(EXENAME)_Make
 
 objFiles = $(cppFiles:%=$(tmpPath)/ffs/src/%.o)
 
-all: ../Build/Bin/$(exeName)
+all: ../Build/Bin/$(EXENAME)
 
-../Build/Bin/$(exeName): $(objFiles)
+../Build/Bin/$(EXENAME): $(objFiles)
 	mkdir -p $(dir $@)
 	$(CXX) -o $@ $^ $(LDFLAGS)
 
@@ -128,4 +138,14 @@
 
 clean:
 	rm -rf $(tmpPath)
-	rm -f ../Build/Bin/$(exeName)
+	rm -f ../Build/Bin/$(EXENAME)
+
+install:
+	mkdir -p $(BINDIR)
+	cp ../Build/Bin/$(EXENAME) $(BINDIR)
+
+	mkdir -p $(APPSHAREDIR)
+	cp -R ../Build/Resources/ $(APPSHAREDIR)
+
+	mkdir -p $(DOCSHAREDIR)
+	cp ../../Changelog.txt $(DOCSHAREDIR)/CHANGELOG
diff '--color=auto' -ruN a/FreeFileSync/Source/RealTimeSync/Makefile b/FreeFileSync/Source/RealTimeSync/Makefile
--- a/FreeFileSync/Source/RealTimeSync/Makefile	2023-09-13 12:16:10.000000000 +0200
+++ b/FreeFileSync/Source/RealTimeSync/Makefile	2025-05-10 23:34:58.283898966 +0200
@@ -1,14 +1,20 @@
 CXX ?= g++
-exeName = RealTimeSync_$(shell arch)
+# We are building for a single target arch
+EXENAME = RealTimeSync
+prefix      = /usr
+BINDIR      = $(DESTDIR)$(prefix)/bin
 
+# Remove -O3 to respect system CXXFLAGS, add -DZEN_LINUX
 CXXFLAGS += -std=c++23 -pipe -DWXINTL_NO_GETTEXT_MACRO -I../../.. -I../../../zenXml -include "zen/i18n.h" -include "zen/warn_static.h" \
            -Wall -Wfatal-errors -Wmissing-include-dirs -Wswitch-enum -Wcast-align -Wnon-virtual-dtor -Wno-unused-function -Wshadow -Wno-maybe-uninitialized \
-           -O3 -DNDEBUG `wx-config --cxxflags --debug=no` -pthread
+           -DNDEBUG `wx-config --cxxflags --debug=no` -pthread -DZEN_LINUX
 
-LDFLAGS += -s -no-pie `wx-config --libs std, aui, richtext --debug=no` -pthread
+# Remove -s because stripping is done by emerge, add -lz
+LDFLAGS += -no-pie -lz `wx-config --libs std, aui, richtext --debug=no` -pthread
 
 #Gtk - support "no button border"
-CXXFLAGS  += `pkg-config --cflags gtk+-2.0`
+CXXFLAGS  += `pkg-config --cflags gtk+-3.0`
+LDFLAGS += `pkg-config --libs gtk+-3.0`
 #treat as system headers so that warnings are hidden:
 CXXFLAGS  += -isystem/usr/include/gtk-2.0
 
@@ -48,13 +54,13 @@
 cppFiles+=../../../zen/thread.cpp
 cppFiles+=../../../zen/zstring.cpp
 
-tmpPath = $(shell dirname "$(shell mktemp -u)")/$(exeName)_Make
+tmpPath = $(shell dirname "$(shell mktemp -u)")/$(EXENAME)_Make
 
 objFiles = $(cppFiles:%=$(tmpPath)/ffs/src/rts/%.o)
 
-all: ../../Build/Bin/$(exeName)
+all: ../../Build/Bin/$(EXENAME)
 
-../../Build/Bin/$(exeName): $(objFiles)
+../../Build/Bin/$(EXENAME): $(objFiles)
 	mkdir -p $(dir $@)
 	$(CXX) -o $@ $^ $(LDFLAGS)
 
@@ -64,4 +70,8 @@
 
 clean:
 	rm -rf $(tmpPath)
-	rm -f ../../Build/Bin/$(exeName)
+	rm -f ../../Build/Bin/$(EXENAME)
+
+install:
+	mkdir -p $(BINDIR)
+	cp ../../Build/Bin/$(EXENAME) $(BINDIR)
diff '--color=auto' -ruN a/libcurl/curl_wrap.cpp b/libcurl/curl_wrap.cpp
--- a/libcurl/curl_wrap.cpp	2023-09-13 12:16:13.000000000 +0200
+++ b/libcurl/curl_wrap.cpp	2025-05-10 23:36:47.173895636 +0200
@@ -400,7 +400,7 @@
             ZEN_CHECK_CASE_FOR_CONSTANT(CURLE_UNRECOVERABLE_POLL);
             ZEN_CHECK_CASE_FOR_CONSTANT(CURL_LAST);
     }
-    static_assert(CURL_LAST == CURLE_UNRECOVERABLE_POLL + 1);
+//    static_assert(CURL_LAST == CURLE_UNRECOVERABLE_POLL + 1);
 
     return replaceCpy<std::wstring>(L"Curl status %x", L"%x", numberTo<std::wstring>(static_cast<int>(sc)));
 }
